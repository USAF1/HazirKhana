// <auto-generated />
using System;
using EntityLibrary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityLibrary.Migrations
{
    [DbContext(typeof(ApplictionDb))]
    [Migration("20210629064434_InitialCatalogLocationUpdate")]
    partial class InitialCatalogLocationUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityLibrary.CuisineManagment.Cuisine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("ParentCuisineId")
                        .HasColumnType("int");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentCuisineId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Cuisines");
                });

            modelBuilder.Entity("EntityLibrary.LocationManagment.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name", "PostalCode")
                        .IsUnique();

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("EntityLibrary.LocationManagment.Provience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Proviences");
                });

            modelBuilder.Entity("EntityLibrary.ProductsManagment.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CuisineId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CuisineId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EntityLibrary.RestaurantManagment.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<byte[]>("Banner")
                        .HasColumnType("image");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<long>("ConatctTel")
                        .HasColumnType("bigint");

                    b.Property<long>("ContactMob")
                        .HasColumnType("bigint");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<byte[]>("Logo")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("OrderLedTime")
                        .HasColumnType("int");

                    b.Property<int>("PercentageCutOff")
                        .HasColumnType("int");

                    b.Property<int>("PostalCode")
                        .HasColumnType("int");

                    b.Property<int?>("ProvienceId")
                        .HasColumnType("int");

                    b.Property<bool>("Reservation")
                        .HasColumnType("bit");

                    b.Property<int>("SalesTax")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("ProvienceId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("EntityLibrary.CuisineManagment.Cuisine", b =>
                {
                    b.HasOne("EntityLibrary.CuisineManagment.Cuisine", "ParentCuisine")
                        .WithMany()
                        .HasForeignKey("ParentCuisineId");

                    b.HasOne("EntityLibrary.RestaurantManagment.Restaurant", null)
                        .WithMany("Cuisines")
                        .HasForeignKey("RestaurantId");

                    b.Navigation("ParentCuisine");
                });

            modelBuilder.Entity("EntityLibrary.ProductsManagment.Product", b =>
                {
                    b.HasOne("EntityLibrary.CuisineManagment.Cuisine", "Cuisine")
                        .WithMany()
                        .HasForeignKey("CuisineId");

                    b.HasOne("EntityLibrary.RestaurantManagment.Restaurant", "Restaurant")
                        .WithMany("Products")
                        .HasForeignKey("RestaurantId");

                    b.Navigation("Cuisine");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("EntityLibrary.RestaurantManagment.Restaurant", b =>
                {
                    b.HasOne("EntityLibrary.LocationManagment.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("EntityLibrary.LocationManagment.Provience", "Provience")
                        .WithMany()
                        .HasForeignKey("ProvienceId");

                    b.Navigation("City");

                    b.Navigation("Provience");
                });

            modelBuilder.Entity("EntityLibrary.RestaurantManagment.Restaurant", b =>
                {
                    b.Navigation("Cuisines");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
